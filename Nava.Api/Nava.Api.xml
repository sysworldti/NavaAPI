<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nava.Api</name>
    </assembly>
    <members>
        <member name="T:Nava.Api.Controllers.ApiControllerBase`2">
            <summary>
            ApiControllerBase
            </summary>
        </member>
        <member name="M:Nava.Api.Controllers.ApiControllerBase`2.#ctor(`0)">
            <summary>
            ApiControllerBase
            </summary>
            <param name="repository"></param>
        </member>
        <member name="M:Nava.Api.Controllers.ApiControllerBase`2.Get(System.Int32)">
            <summary>
            Recupera um registro no banco de dados pelo seu Id
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Nava.Api.Controllers.ApiControllerBase`2.GetAll">
            <summary>
            Recupera recupera todos os registros do banco de dados
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nava.Api.Controllers.ApiControllerBase`2.Create(`1)">
            <summary>
            Cria um novo registro no banco de dados
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Nava.Api.Controllers.ApiControllerBase`2.Update(`1)">
            <summary>
            Atualiza o registro corrente no banco de dados
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Nava.Api.Controllers.ApiControllerBase`2.Remove(System.Int32)">
            <summary>
            Remove o registro do bando de dados pelo Id
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="T:Nava.Api.Controllers.VendaController">
            <summary>
            VendaController
            </summary>
        </member>
        <member name="M:Nava.Api.Controllers.VendaController.#ctor(Nava.Api.Repository.IVendaRepository)">
            <summary>
            VendaController
            </summary>
            <param name="repository"></param>
        </member>
        <member name="M:Nava.Api.Controllers.VendaController.PagamentoAprovado(System.Int32,Nava.Api.Service.IVendaService)">
            <summary>
            Muda o status da venda para pagamento aprovado
            </summary>
            <param name="Id"></param>
            <param name="service"></param>
            <returns></returns>
        </member>
        <member name="M:Nava.Api.Controllers.VendaController.CancelarVenda(System.Int32,Nava.Api.Service.IVendaService)">
            <summary>
            Permite que o usuário cancele uma venda
            </summary>
            <param name="Id"></param>
            <param name="service"></param>
            <returns></returns>
        </member>
        <member name="M:Nava.Api.Controllers.VendaController.EnviarVendaParaTransportadora(System.Int32,Nava.Api.Service.IVendaService)">
            <summary>
            Permite que o usuário enviar venda para a transportadora
            </summary>
            <param name="Id"></param>
            <param name="service"></param>
            <returns></returns>
        </member>
        <member name="M:Nava.Api.Controllers.VendaController.TransportadoraEntregarVenda(System.Int32,Nava.Api.Service.IVendaService)">
            <summary>
            Permite que o usuário informe que a transportadora fez a entrega da mercadoria
            </summary>
            <param name="Id"></param>
            <param name="service"></param>
            <returns></returns>
        </member>
        <member name="T:Nava.Api.Controllers.VendedorController">
            <summary>
            VendedorController
            </summary>
        </member>
        <member name="M:Nava.Api.Controllers.VendedorController.#ctor(Nava.Api.Repository.IVendedorRepository)">
            <summary>
            vendedorController
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:Nava.Api.DatabaseContext">
            <summary>
            DatabaseContext
            </summary>
        </member>
        <member name="M:Nava.Api.DatabaseContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Nava.Api.DatabaseContext})">
            <summary>
            DatabaseContext
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Nava.Api.DatabaseContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            OnModelCreating
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="P:Nava.Api.DatabaseContext.Vendas">
            <summary>
            DbSet de Vendas
            </summary>
        </member>
        <member name="P:Nava.Api.DatabaseContext.Vendedores">
            <summary>
            DbSet de Vendedores
            </summary>
        </member>
        <member name="P:Nava.Api.DatabaseContext.VendaItens">
            <summary>
            DbSet de Itens da Venda
            </summary>
        </member>
        <member name="T:Nava.Api.Enums.StatusVenda">
            <summary>
            Define os status dade venda
            </summary>
        </member>
        <member name="F:Nava.Api.Enums.StatusVenda.AguardandoPagamento">
            <summary>
            Aguardando pagamento
            </summary>
        </member>
        <member name="F:Nava.Api.Enums.StatusVenda.PagamentoAprovado">
            <summary>
            Pagamento Aprovado
            </summary>
        </member>
        <member name="F:Nava.Api.Enums.StatusVenda.Cancelado">
            <summary>
            Cancelada
            </summary>
        </member>
        <member name="F:Nava.Api.Enums.StatusVenda.EnvioTransportadora">
            <summary>
            Enviado para Transportadora
            </summary>
        </member>
        <member name="F:Nava.Api.Enums.StatusVenda.Entregue">
            <summary>
            Entregue
            </summary>
        </member>
        <member name="T:Nava.Api.Model.EntityBase">
            <summary>
            Entidade base
            </summary>
        </member>
        <member name="P:Nava.Api.Model.EntityBase.Id">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="T:Nava.Api.Model.Venda">
            <summary>
            Venda
            </summary>
        </member>
        <member name="P:Nava.Api.Model.Venda.DataVenda">
            <summary>
            Data de realização da venda
            </summary>
        </member>
        <member name="P:Nava.Api.Model.Venda.Numero">
            <summary>
            Número da venda
            </summary>
        </member>
        <member name="P:Nava.Api.Model.Venda.Status">
            <summary>
            Status atual da venda
            </summary>
        </member>
        <member name="P:Nava.Api.Model.Venda.VendedorId">
            <summary>
            Vendedor que está realizando a Venda
            </summary>
        </member>
        <member name="P:Nava.Api.Model.Venda.Vendedor">
            <summary>
            Vendedor associado a venda
            </summary>
        </member>
        <member name="P:Nava.Api.Model.Venda.Items">
            <summary>
            Itens da venda
            </summary>
        </member>
        <member name="T:Nava.Api.Model.VendaItem">
            <summary>
            Itens da Venda
            </summary>
        </member>
        <member name="P:Nava.Api.Model.VendaItem.NomeProduto">
            <summary>
            Nome do Produto que será vendido
            </summary>        
        </member>
        <member name="P:Nava.Api.Model.VendaItem.Quantidade">
            <summary>
            Quantidade de produto(s) vendido(s)
            </summary>
        </member>
        <member name="P:Nava.Api.Model.VendaItem.VendaId">
            <summary>
            Id da Venda
            </summary>
        </member>
        <member name="P:Nava.Api.Model.VendaItem.Venda">
            <summary>
            Venda em que o item está participando
            </summary>
        </member>
        <member name="T:Nava.Api.Model.Vendedor">
            <summary>
            Entidade do vendedor
            </summary>
        </member>
        <member name="P:Nava.Api.Model.Vendedor.Nome">
            <summary>
            Nome do Vendedor
            </summary>
        </member>
        <member name="P:Nava.Api.Model.Vendedor.CPF">
            <summary>
            Cpf do Vendedor
            </summary>
        </member>
        <member name="P:Nava.Api.Model.Vendedor.Email">
            <summary>
            Email do Vendedor
            </summary>
        </member>
        <member name="P:Nava.Api.Model.Vendedor.Telefone">
            <summary>
            Telefone do Vendedor
            </summary>
        </member>
        <member name="T:Nava.Api.Program">
            <summary>
            Program
            </summary>
        </member>
        <member name="M:Nava.Api.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Nava.Api.Program.CreateHostBuilder(System.String[])">
            <summary>
            CreateHostBuilder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Nava.Api.Repository.IRepositoryBase`1">
            <summary>
            IRepositoryBase
            </summary>
            <typeparam name="Entity"></typeparam>
        </member>
        <member name="M:Nava.Api.Repository.IRepositoryBase`1.Create(`0)">
            <summary>
            Adiciona um novo registro na entidade
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Nava.Api.Repository.IRepositoryBase`1.Update(`0)">
            <summary>
            Atualiza a entidade passada
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Nava.Api.Repository.IRepositoryBase`1.Remove(`0)">
            <summary>
            Remove a entidade do banco de dados
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Nava.Api.Repository.IRepositoryBase`1.Get(System.Int32)">
            <summary>
            Recupera uma entidade pelo Id
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Nava.Api.Repository.IRepositoryBase`1.GetAll">
            <summary>
            Recupera todas as entidades do banco de dados
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nava.Api.Repository.IVendaRepository">
            <summary>
            Interface do repositorio de vendas
            </summary>
        </member>
        <member name="T:Nava.Api.Repository.IVendedorRepository">
            <summary>
            IVendedorRepository
            </summary>
        </member>
        <member name="T:Nava.Api.Repository.RepositoryBase`1">
            <summary>
            RepositoryBase
            </summary>
            <typeparam name="Entity"></typeparam>
        </member>
        <member name="M:Nava.Api.Repository.RepositoryBase`1.#ctor(Nava.Api.DatabaseContext,Microsoft.EntityFrameworkCore.DbSet{`0})">
            <summary>
            RepositoryBase
            </summary>
            <param name="context"></param>
            <param name="entities"></param>
        </member>
        <member name="M:Nava.Api.Repository.RepositoryBase`1.DoBeforeCreate(`0)">
            <summary>
            Metodo para ser sobrecarregado...
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Nava.Api.Repository.RepositoryBase`1.Create(`0)">
            <summary>
            Create
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Nava.Api.Repository.RepositoryBase`1.Get(System.Int32)">
            <summary>
            Get
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Nava.Api.Repository.RepositoryBase`1.GetAll">
            <summary>
            GetAll
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nava.Api.Repository.RepositoryBase`1.DoBeforeRemove(`0)">
            <summary>
            Metodo para ser sobrecarregado...
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Nava.Api.Repository.RepositoryBase`1.Remove(`0)">
            <summary>
            Remove
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Nava.Api.Repository.RepositoryBase`1.DoBeforeUpdate(`0)">
            <summary>
            Metodo para ser sobrecarregado...
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Nava.Api.Repository.RepositoryBase`1.Update(`0)">
            <summary>
            Update
            </summary>
            <param name="entity"></param>
        </member>
        <member name="T:Nava.Api.Repository.VendaRepository">
            <summary>
            Repositorio de vendas
            </summary>
        </member>
        <member name="M:Nava.Api.Repository.VendaRepository.#ctor(Nava.Api.DatabaseContext)">
            <summary>
            Construtor do Venda Repository
            </summary>
        </member>
        <member name="M:Nava.Api.Repository.VendaRepository.DoBeforeCreate(Nava.Api.Model.Venda)">
            <summary>
            Força a venda iniciar com o status de aguardando pagamento.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Nava.Api.Repository.VendaRepository.Get(System.Int32)">
            <summary>
            Get
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Nava.Api.Repository.VendaRepository.GetAll">
            <summary>
            GetAll
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nava.Api.Repository.VendedorRepository">
            <summary>
            VendedorRepository
            </summary>
        </member>
        <member name="M:Nava.Api.Repository.VendedorRepository.#ctor(Nava.Api.DatabaseContext)">
            <summary>
            Construtor do Vendedor Repository
            </summary>
        </member>
        <member name="T:Nava.Api.Service.IVendaService">
            <summary>
            IVendaService
            </summary>
        </member>
        <member name="M:Nava.Api.Service.IVendaService.PagamentoAprovado(System.Int32)">
            <summary>
            Serviço para informar que o pagamento da venda foi aprovado...
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Nava.Api.Service.IVendaService.CancelarVenda(System.Int32)">
            <summary>
            Serviço para informar que a venda foi cancelada...
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Nava.Api.Service.IVendaService.EnviarVendaParaTransportadora(System.Int32)">
            <summary>
            Serviço para mudar o status da venda para enviado para a transportadora...
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Nava.Api.Service.IVendaService.TransportadoraEntregarVenda(System.Int32)">
            <summary>
            Serviço para mudar o status da venda para entregue...
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="T:Nava.Api.Service.VendaService">
            <summary>
            VendaService
            </summary>
        </member>
        <member name="M:Nava.Api.Service.VendaService.#ctor(Nava.Api.Repository.IVendaRepository)">
            <summary>
            VendaService
            </summary>
            <param name="repository"></param>
        </member>
        <member name="M:Nava.Api.Service.VendaService.PagamentoAprovado(System.Int32)">
            <summary>
            Muda o status da venda para pagamento aprovado...
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Nava.Api.Service.VendaService.CancelarVenda(System.Int32)">
            <summary>
            Muda o status da venda para cancelada
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Nava.Api.Service.VendaService.EnviarVendaParaTransportadora(System.Int32)">
            <summary>
            Muda o status da venda para enviado para transportadora 
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Nava.Api.Service.VendaService.TransportadoraEntregarVenda(System.Int32)">
            <summary>
            Muda o status da venda para entregue ao consumidor final
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="T:Nava.Api.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="M:Nava.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Startup
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Nava.Api.Startup.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:Nava.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            ConfigureServices
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Nava.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Configure
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
